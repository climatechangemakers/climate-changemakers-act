services:
  - docker:dind

variables:
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

stages: 
  - test
  - build
  - deploy-infrastructure
  - deploy-members-of-congress
  - deploy-district-offices
  - deploy-service

before_script: 
  - export GRADLE_USER_HOME=`pwd`/backend/.gradle

cache:
  paths:
    - ./backend/.gradle/wrapper
    - ./backend/.gradle/caches

test-backend:
  image: openjdk:11.0.12
  stage: test
  script: 
    - cd backend
    - ./gradlew test
  only: 
    - trunk 
    - external_pull_requests

build-production-container:
  image: docker:stable
  stage: build
  script: 
    - docker build --build-arg cwc_proxy_host=${CWC_PROXY_HOST} -t "$IMAGE_TAG:$CI_COMMIT_SHORT_SHA" .
  only: 
    - external_pull_requests

publish-production-container:
  image: docker:stable
  stage: build
  variables:
    TAGGED_IMAGE: "$IMAGE_TAG:$CI_COMMIT_SHORT_SHA"
    LATEST_IMAGE: "$IMAGE_TAG:latest"
  script: 
    - docker login -u $GITLAB_USER_LOGIN -p $GITLAB_API_KEY registry.gitlab.com 
    - docker build --build-arg cwc_proxy_host=${CWC_PROXY_HOST} -t $TAGGED_IMAGE .
    - docker tag $TAGGED_IMAGE $LATEST_IMAGE
    - docker push $IMAGE_TAG
  only: 
    - trunk

migrate-production-database:
  stage: deploy-infrastructure
  image: 
    name: flyway/flyway:8.2.2-alpine
    entrypoint: [""]
  script:
    # below is a hack to work around https://github.com/cashapp/sqldelight/issues/2744. Can remove manual file renaming when it's resolved. 
    - mkdir -p backend/build/resources/main/migrations/
    - cp backend/src/main/sqldelight/migrations/*.sqm backend/build/resources/main/migrations/
    - find backend/build/resources/main/migrations/ -name "*.sqm" -exec sh -c 'mv "$1" "${1%.sqm}.sql"' _ {} \;
    - flyway -user=${PGUSER} -password=${PGPASSWORD} -table=schema_history -locations=backend/build/resources/main/migrations/ -url=${POSTGRES_URL} migrate
  only: 
    refs:
      - trunk
    changes:
      - backend/src/main/sqldelight/migrations/*.sqm

update-members-of-congress-dry-run:
  image: registry.gitlab.com/climatechangemakers/parse-congress-info:e10d216e
  stage: deploy-members-of-congress
  script:
    - parse-congress-info.kexe -t current-legislators -l congress/legislators-current.json -c congress/active-offices.json -s congress/legislators-social-media.json members-of-congress.sql
  artifacts: 
    paths: 
      - members-of-congress.sql
  only: 
    refs: 
      - external_pull_requests
    changes: 
      - congress/legislators-current.json
      - congress/legislators-social-media.json
      - congress/active-offices.json

update-members-of-congress:
  image: registry.gitlab.com/climatechangemakers/parse-congress-info:e10d216e
  stage: deploy-members-of-congress
  script:
    - parse-congress-info.kexe -t current-legislators -l congress/legislators-current.json -c congress/active-offices.json -s congress/legislators-social-media.json members-of-congress.sql
    - psql -f members-of-congress.sql 
  artifacts: 
    paths: 
      - members-of-congress.sql
  only: 
    refs: 
      - trunk
    changes: 
      - congress/legislators-current.json
      - congress/legislators-social-media.json
      - congress/active-offices.json

update-district-offices-dry-run:
  image: registry.gitlab.com/climatechangemakers/parse-congress-info:e10d216e
  stage: deploy-district-offices
  script:
    - parse-congress-info.kexe -t district-offices -d congress/legislators-district-offices.json district-offices.sql
  artifacts: 
    paths: 
      - district-offices.sql
  only: 
    refs: 
      - external_pull_requests
    changes: 
      - congress/legislators-district-offices.json

update-district-offices:
  image: registry.gitlab.com/climatechangemakers/parse-congress-info:e10d216e
  stage: deploy-district-offices
  script:
    - parse-congress-info.kexe -t district-offices -d congress/legislators-district-offices.json district-offices.sql
    - psql -f district-offices.sql 
  artifacts: 
    paths: 
      - district-offices.sql
  only: 
    refs: 
      - trunk
    changes: 
      - congress/legislators-district-offices.json

deploy-cloudformation-network:
  stage: deploy-infrastructure
  resource_group: deploy-infrastructure
  image: 
    name: amazon/aws-cli:2.4.14
    entrypoint: [""]
  script: 
    - aws cloudformation deploy --template-file cloudformation/public-vpc.yml --stack-name networking-public-vpc
  only: 
    refs:
      - trunk
    changes:
      - cloudformation/public-vpc.yml

deploy-cloudformation-service:
  stage: deploy-service
  resource_group: deploy-service
  image: 
    name: amazon/aws-cli:2.4.14
    entrypoint: [""]
  variables:
    IMAGE_URL: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  script: 
    - aws cloudformation deploy --template-file cloudformation/public-subnet-public-loadbalancer.yml --stack-name climate-changemakers-act --parameter-overrides ImageUrl=$IMAGE_URL
  only: 
    - trunk
